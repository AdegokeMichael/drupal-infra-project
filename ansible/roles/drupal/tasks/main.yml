---

- name: Ensure Composer is installed
  stat:
    path: "{{ composer_path }}"
  register: composer_check

- name: Fail if Composer is not installed
  fail:
    msg: "Composer not found at {{ composer_path }}. Please install Composer before running this role."
  when: not composer_check.stat.exists

- name: Ensure web root directory exists
  file:
    path: "{{ web_root }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'

- name: Remove existing Drupal directory (if re-provisioning)
  file:
    path: "{{ drupal_project_dir }}"
    state: absent
  when: drupal_project_dir is defined and force_reinstall | default(false)

- name: Create Drupal project directory
  file:
    path: "{{ drupal_project_dir }}"
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'

- name: Check if Drupal installation directory exists
  stat:
    path: "{{ drupal_project_dir }}/web"
  register: drupal_web_dir

- name: Set drupal_installed fact
  set_fact:
    drupal_installed: "{{ drupal_web_dir.stat.exists }}"

- name: Install Drupal using Composer
  command: >
    {{ composer_path }} create-project {{ composer_project }} {{ drupal_project_dir }}
  args:
    chdir: "{{ web_root }}"
  environment:
    COMPOSER_ALLOW_SUPERUSER: "1"
    COMPOSER_MEMORY_LIMIT: "1G"
  register: drupal_composer_result
  changed_when: "'Installing drupal/core' in drupal_composer_result.stdout"
  failed_when: drupal_composer_result.rc != 0
  when: not drupal_installed


# 2. NEW - Ensure .htaccess exists (insert here)
- name: Ensure .htaccess exists
  block:
    - name: Check for .htaccess
      stat:
        path: "{{ drupal_project_dir }}/web/.htaccess"
      register: htaccess

    - name: Copy from example if missing
      copy:
        src: "{{ drupal_project_dir }}/web/example.htaccess"
        dest: "{{ drupal_project_dir }}/web/.htaccess"
        remote_src: yes
        owner: www-data
        group: www-data
        mode: '0644'
      when: not htaccess.stat.exists

    - name: Create basic .htaccess if completely missing
      copy:
        content: |
          <IfModule mod_rewrite.c>
            RewriteEngine on
            RewriteBase /
            RewriteCond %{REQUEST_FILENAME} !-f
            RewriteCond %{REQUEST_FILENAME} !-d
            RewriteRule ^(.*)$ index.php?q=\$1 [L,QSA]
          </IfModule>
        dest: "{{ drupal_project_dir }}/web/.htaccess"
        owner: www-data
        group: www-data
        mode: '0644'
      when: 
        - not htaccess.stat.exists
        - not lookup('file', drupal_project_dir + '/web/example.htaccess')

# 3. Apache configuration (existing)
- name: Configure Apache virtual host
  template:
    src: drupal.conf.j2
    dest: /etc/apache2/sites-available/drupal.conf
  # ... (your existing parameters)

# 4. Reverse proxy/ALB config (existing)
- name: Add reverse proxy config to .htaccess
  blockinfile:
    path: "{{ drupal_project_dir }}/web/.htaccess"
    # ... (your existing parameters)  

- name: Fail if Drupal installation failed
  stat:
    path: "{{ drupal_project_dir }}/web"
  register: post_install_check
  failed_when: not post_install_check.stat.exists
  when: not drupal_installed
  
- name: Ensure Drupal directory exists
  ansible.builtin.file:
    path: /var/www/html/drupal
    state: directory
    owner: www-data
    group: www-data
    mode: '0755'

#- name: Install Drush for admin user
#  become: true
 # become_user: admin
 # become_method: su
 # import_tasks: install_drush.yml

# - name: Install Drupal site
 # import_tasks: install.yml
#- name: Install Drush globally
 # command: composer global require drush/drush
  #environment:
   # PATH: "{{ ansible_env.HOME }}/.config/composer/vendor/bin:{{ ansible_env.PATH }}"

#- name: Install Drush globally (system-wide)
 # command: >
  #  composer require drush/drush --working-dir=/usr/local/bin
  #args:
   # creates: /usr/local/bin/vendor/bin/drush  # Skip if already installed
  #become: yes

- name: Quick start Drupal site (e.g. Umami demo)
  shell: >
    timeout 1800 php -d memory_limit=1024M core/scripts/drupal quick-start {{ drupal_site_name }}
  args:
    chdir: "{{ drupal_project_dir }}/web"
    creates: "{{ drupal_project_dir }}/web/sites/default/settings.php"
  when: drupal_site_name | length > 0 and not drupal_installed
- name: Deploy Apache configuration
  template:
    src: drupal.conf.j2
    dest: /etc/apache2/sites-available/drupal.conf
    owner: root
    group: root
    mode: '0644'
  notify:
    - enable_drupal_site
    - restart apache

- name: Disable default Apache site
  command: a2dissite 000-default.conf
  notify: restart apache
  when: "'apache2' in ansible_facts.packages"

- name: Ensure mod_rewrite is enabled
  command: a2enmod rewrite
  notify: restart apache

- name: Ensure mod_proxy_fcgi is enabled (for PHP-FPM)
  command: a2enmod proxy_fcgi
  notify: restart apache
  when: php_fpm_install | default(true)  

- import_tasks: db_config.yml
  when: drupal_installed
